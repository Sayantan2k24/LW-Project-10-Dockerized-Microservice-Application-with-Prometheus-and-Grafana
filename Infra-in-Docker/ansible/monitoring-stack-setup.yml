- name: Setup Monitoring Stack with Prometheus, Grafana and Microservice
  hosts: localhost
  vars:
    - network_name: microservice_monitoring_stack

  tasks:

    - name: Create Docker network 
      shell: >
        docker network create {{ network_name }} --driver=bridge
      ignore_errors: yes

    - name: Build Prometheus image
      shell: >
        docker build -t custom-prometheus-server:v1 {{ playbook_dir }}/../prometheus

    - name: Build Grafana image
      shell: >
        docker build -t custom-grafana-server:v1 {{ playbook_dir }}/../grafana

    - name: Build Microservice app image
      shell: >
        docker build -t flask-metrics:v1 {{ playbook_dir }}/../microservice

    - name: Build Node Exporter image
      shell: >
        docker build -t custom-node-exporter:v1 {{ playbook_dir }}/../node-exporter

    - name: Run Prometheus container
      shell: >
        docker run -d --name prometheus-server
        --network {{ network_name }}
        -p 9090:9090
        -v {{ playbook_dir }}/../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        custom-prometheus-server:v1

    - name: Create Grafana volume
      shell: docker volume create grafana_data
      ignore_errors: yes

    - name: Run Grafana container
      shell: >
        docker run -d --name grafana-server
        --network {{ network_name }}
        -p 3000:3000
        -v grafana_data:/var/lib/grafana
        custom-grafana-server:v1

    - name: Run Microservice container
      shell: >
        docker run -d --name flask-metrics
        --network {{ network_name }}
        -p 5000:5000
        flask-metrics:v1

    - name: Run Node Exporter container (with host namespace access)
      shell: >
        docker run -d --name node-exporter
        --network {{ network_name }}
        --pid=host
        --cap-add=SYS_TIME
        -p 9100:9100
        -v /proc:/host/proc:ro
        -v /sys:/host/sys:ro
        -v /:/rootfs:ro
        custom-node-exporter:v1
